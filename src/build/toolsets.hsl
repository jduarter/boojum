include ~/toolsets/gcc/gcc-lib.hsl
include ~/toolsets/gcc/gcc-app.hsl
include ~/toolsets/clang/clang-lib.hsl
include ~/toolsets/clang/clang-app.hsl
include ~/fsutil.hsl

function get_lib_toolset() : result type string {
    result get_current_toolset() + "-c-lib";
}

function get_app_toolset() : result type string {
    result get_current_toolset() + "-c-app";
}

function get_current_toolset() : result type string {
    if (has_gcc()) {
        result "gcc";
    }
    if (has_clang()) {
        result "clang";
    }
    result "";
}

function build(libname type string) : result type int {
    var func type int;
    $func = hefesto.sys.get_func_addr("build_" + $libname);
    if ($func != 0) {
        result hefesto.sys.call_func_addr($func);
    }
    hefesto.sys.echo("ERROR: Unknown library to build: " + $libname + "\n");
    result 1;
}

local function build_libkryptos() : result type int {
    if (isfile("libs/kryptos/lib/libkryptos.a") == 1) {
        result 0;
    }
    var oldcwd type string;
    $oldcwd = hefesto.sys.pwd();
    if (hefesto.sys.cd("libs/kryptos/src") != 1) {
        hefesto.sys.echo("ERROR: Unable to find libkryptos directory.\n");
        result 1;
    }

    var err type int;
    $err = hefesto.sys.run("hefesto");

    hefesto.sys.cd($oldcwd);

    result $err;
}

local function build_libcutest() : result type int {
    if (isfile("libs/cutest/src/lib/libcutest.a") == 1) {
        result 0;
    }

    var oldcwd type string;
    $oldcwd = hefesto.sys.pwd();

    if (hefesto.sys.cd("libs/cutest/src") != 1) {
        hefesto.sys.echo("ERROR: Unable to find libcutest directory.\n");
        result 1;
    }

    var err type int;
    $err = hefesto.sys.run("hefesto");

    hefesto.sys.cd($oldcwd);

    result $err;
}

local function build_test() : result type int {
    var oldcwd type string;
    $oldcwd = hefesto.sys.pwd();

    if (hefesto.sys.cd("test") != 1) {
        hefesto.sys.echo("ERROR: Unable to find test directory.\n");
        result 1;
    }

    var cmdline type string;
    $cmdline = "hefesto";

    var dbg type list;
    $dbg = hefesto.sys.get_option("compile-model");
    if ($dbg.count() > 0 && $dbg.item(0) == "debug") {
        $cmdline = $cmdline + " --compile-model=debug";
    }

    var err type int;
    $err = hefesto.sys.run($cmdline);

    hefesto.sys.cd($oldcwd);

    result $err;
}

local function has_gcc() : result type int {
    result (runbk("gcc --version") == 0);
}

local function has_clang() : result type int {
    result (runbk("clang --version") == 0);
}

local function runbk(cmd type string) : result type int {
    if (hefesto.sys.os_name() != "windows") {
        result hefesto.sys.run($cmd + ">/dev/null 2>&1");
    }
    result hefesto.sys.run($cmd + ">nul 2>&1");
}
